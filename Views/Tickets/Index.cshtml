@using bug_tracker.Models
@model IEnumerable<Ticket>

@{
    ViewBag.Title = "Index";
}

<div class="card card-inverse">
    <div class="header">
        <div class="header-content">
            <div class="page-title">
                <i class="icon-ticket x6 position-left"></i> All Tickets
            </div>
        </div>
    </div>
</div>

<div class="card card-inverse card-flat">
    <div class="card-header">
        @*<div class="card-title">User Tickets</div>*@
    </div>
    <div class="card-block row">
        Below you will find a list of all tickets, the original submitters, the associated projects, and the assigned developer, if any.
    </div>
</div>

<!-- Row reordering datatable -->
<div class="card card-inverse card-flat">
    <div class="card-header">
        @*<div class="card-title">Your Projects' Tickets</div>*@
    </div>

    <div class="table-responsive">
        <table class="table datatable-reorder-realtime">
        <thead>
            <tr>
                @if (User.IsInRole("Admin"))
                {
                    <th>
                        @Html.DisplayName("Actions")
                    </th>
                }
                <th>
                    @Html.DisplayName("Developer")
                </th>
                <th>
                    @Html.DisplayName("Submitter")
                </th>
                <th>
                    @Html.DisplayName("Project")
                </th>
                <th>
                    @Html.DisplayName("Priority")
                </th>
                <th>
                    @Html.DisplayName("Issue")
                </th>
                <th>
                    @Html.DisplayName("Type")
                </th>
                <th>
                    @Html.DisplayName("Status")
                </th>
                <th>
                    @Html.DisplayName("Comments")
                </th>
            </tr>
        </thead>

            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    @if (User.IsInRole("Admin"))
                    {
                        <td class="text-center">
                            <div class="btn-group" role="group">
                                <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle btn-sm" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    actions
                                </button>
                                <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                    <a class="dropdown-item">@Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "dropdown-item" })</a>
                                    <a class="dropdown-item">@Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })</a>
                                    <a class="dropdown-item">@Html.ActionLink("Assign a Developer", "AssignTicket", new { id = item.Id }, new { @class = "dropdown-item" })</a>
                                </div>
                            </div>
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.AssignedToUser.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OwnerUser.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Project.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- /Row reordering datatable -->
