@model bug_tracker.Models.Ticket

@{
    ViewBag.Title = "Create";
}
@if (User.IsInRole("Submitter"))
{
    <div class="card card-inverse">
        <div class="header">
            <div class="header-content">
                <div class="page-title">
                    <i class="icon-ticket x6 position-left"></i> Submit A New Ticket
                </div>
            </div>
        </div>
    </div>

    <div class="card card-inverse card-flat">
        <div class="card-header">
            @*<div class="card-title">Ticket Details</div>*@
        </div>
        <div class="card-block">
            <div class="form-group row">
                <div class="col-md-12">
                    <h5>Use the below form to create a new ticket. Provide the issue, a detailed description, and select the project associated with the issue. Please indicate the type, priority, and status of your ticket</h5>
                    <h5>You may provide any supplementary documentation by adding a ticket attachment at this time. Attachments may be in the form of PDF or DOC files or images.</h5>
                </div>
            </div>
        </div>
    </div>
    <div class="card card-inverse ">
        <div class="card-header">
            @*<div class="card-title">Create A New Ticket</div>*@
        </div>
        <div class="card-block">
            @using (Html.BeginForm("Create", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group row">
                    <div class="col-md-9">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.Title, "Issue", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9">
                        @Html.LabelFor(model => model.Description, "Comments", htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", rows = "3", cols = "5" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9">
                        @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9">
                        @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9">
                        @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9">
                        @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9">
                        @Html.LabelFor(model => model.Attachments, htmlAttributes: new { @class = "control-label" })
                        <input name="attachment" type="file" class="form-control" id="fileUpload" />
                        @Html.ValidationMessageFor(model => model.Attachments, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-info btn-md" />
                    </div>
                </div>
            }
        </div>
    </div>
}
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
